/*
submission by: advaita soni
*/
#include <iomanip>
#include <ios>
#include<bits/stdc++.h>
#define ll long long
#define pb push_back
#define fr(a,b) for(int i = a; i < b; i++)
#define rep(i,a,b) for(int i = a; i < b; i++)
#define mod 1000000007
#define inf (1LL<<60)
//#define all(x) (x).begin(), (x).end()
//#define prDouble(x) cout << fixed << setprecision(10) << x
//#define triplet pair<ll,pair<ll,ll>>
//#define goog(tno) cout << "Case #" << tno <<": "
#define fast_io ios_base::sync_with_stdio(false);cin.tie(NULL)
#define read(x) int x; cin >> x
#define readstr(x) string x;cin>>x
#define readll(x) long long x; cin>>x 
#define vi(name,n,d) vector<int> name (n,d)
#define vl(name,n,d) vector<long long> name (n,d)
#define nl <<"\n";
#define endl "\n"
#define flush cout.flush();

using namespace std;

void init_code(){
    fast_io;
    #ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
    #endif 
}
 void read_arr(int arr[],int n){
 fr(0,n){
    cin>>arr[i];
 };
 };

 void print_arr(int arr[],int n){
 fr(0,n){
    cout<<arr[i]<<" ";
 };
 cout<<"\n";
 };

//assuming empty array
void read_vec(vector<int>& arr,int n){
 fr(0,n){
 int x;
 cin>>x;
 arr.push_back(x);
 };
 };

 void print_arr(vector<int>& arr){
 for(auto it:arr){
    cout<<it<<" ";
 };
 cout<<"\n";
 };
 ll fact(int n){
 	if(n<=1){
 		return 1;
 	};
 	return (((n%mod)*((fact(n-1))%mod))%mod );
 }

int main() {
   init_code();
   int t = 1; cin >> t;
   while(t--){
        readll(n);
        vl(arr,n,0);
        for(int i =0;i<n;i++){
        	cin>>arr[i];
        }
        vector<int> bit_status(32,0);
        for(int i =0;i<n;i++){
        	ll id = 1;
        	int posn = 0;
        	while(id<=arr[i]){
        		ll bit = (id&arr[i])/id;
        		bit_status[posn] += bit;
        		id = id*2;
        		posn++;
        	};
        };
        vector<int>partial_bits;
        for(int i =0;i<n;i++){
        	int it = bit_status[i];
        	if (it == 0 || it == n) continue;	
        	partial_bits.pb(i);
        };
        int cnt = 0;
        for(int i = 0;i<n;i++){
        	bool incl = true;
        	for(auto jt:partial_bits){
        		ll biti = (arr[i]&(1<<jt))/(1<<jt);
        		if(biti){
        			incl = false;
        		};
        	};
        	cnt += incl;
        };
        cout<<( (( cnt*(cnt-1) )%mod ) *(fact(n-2)%mod))%mod;
        cout<<"\n";
   }
   return 0;
}
